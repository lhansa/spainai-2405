---
title: "R Shiny"
subtitle: "Para qué te sirve y cómo empezaría yo de nuevo"
author: "Leonardo Hansa"
date: 05/23/2024
date-format: "D/M/YYYY"
format: 
  revealjs: 
    theme: 
      - simple
      - custom.scss
    logo: img/LogoLH.png
    transition: slide
    toc: true
    toc-depth: 1
    toc-title: "Qué te voy a contar"
execute: 
  eval: false
  echo: true
---

# Una historia antes {.unnumbered .unlisted}

## Parte 1

:::: {.columns}

::: {.column width="60%"}

::: {.incremental}
- Llego a mi primer trabajo... ni idea de nada.
- Se va uno que mantiene varias Shiny apps.
- Y me toca mantenerlas a mí, que sigo sin tener ni idea de nada.
- El comienzo de una era.
:::
:::

::: {.column width="40%"}
![](img/leonardo hansa 01.jpg)

:::

::::

## Parte 2

![](img/r-hispano.jpg){style="box-shadow: 0px 0px 0px"}

## Parte 3

![](img/Ebiquity_Logo.png){style="box-shadow: 0px 0px 0px"}


# Por qué Shiny

## PowerBI, referente

::: {.incremental}

- Microsoft
- Tableros

:::

## Shiny, una alternativa

::: {.incremental}

- Software libre
- Apps

::: 

Hay otras, sí. Yo cuento Shiny.

## No solo tableros

::: {.incremental}

- Mostrar datos/resultados
- Estandarización procesos
- Interfaz web a modelos/procesos

:::


# Qué es Shiny

## Una librería de R...

![Shiny se inicia como una librería de R de Posit](img/shinysite.png)

::: aside
Posit, PBC, _public-benefit corporation_, empresa que busca un beneficio en la sociedad mediante el desarrollo de herramientas para el análisis de datos.
:::

## ...pero es un ecosistema de desarrollo web para R y Python

![](img/shiny-extensions.png){width=30% fig-align="center"}

::: aside

https://github.com/nanxstats/awesome-shiny-extensions

:::

# Para qué Shiny

## Para todo {transition="slide-in zoom-out"}

![](img/ejemplo1.png)

::: aside
https://shiny.posit.co/r/gallery/
:::


## Para todo {transition="zoom"}

![](img/ejemplo2.png)

## Para todo {transition="zoom-in slide-out"}

![](img/ejemplo3.png)


## Para qué lo uso yo

:::: {.columns}

::: {.column width="50%"}

![](img/eg_chart_generator.png)
![](img/eg_forecast.png)

:::

::: {.column width="50%"}

![](img/eg_stl.png)
![](img/eg_ga.png)

:::

::::

## Para qué lo uso yo

- Interfaz web de procesos complejos
- Explorador de conjuntos de datos
  + Como un PowerBI, pero con las librerías de R
- Documentación
- Ejecución de modelos


# Cómo puedes usar Shiny

Lo puedes plantear en un solo script, pero me gusta empezar por dos: 

- `ui.R`
- `server.R`

## ui.R

```{r}
#| label: ui
library(shiny)

ui <- fluidPage(
  titlePanel("Exploración de Fraude en Tarjetas de Crédito"),
  sidebarLayout(
    sidebarPanel(
      helpText("Explora el conjunto de datos sobre fraude en tarjetas de crédito.")
    ),
    mainPanel(
      plotOutput("plotCategory")
    )
  )
)
```

::: aside
En `ui.R` escribes la interfaz.
:::


## server.R

```{r}
#| label: server
library(shiny)
library(ggplot2)
theme_set(theme_light())

server <- function(input, output) {
  
  df <- readr::read_csv("../data/credit_card_fraud.csv",
                        show_col_types = FALSE)
  
  output$plotCategory <- renderPlot({
    df |>
      dplyr::count(category, sort = TRUE) |>
      ggplot(aes(x = reorder(category, n), y = n)) +
      geom_bar(stat = "identity") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
      labs(
        x = "Categoría", 
        y = "Número de Transacciones", 
        title = "Distribución por Categoría"
      )
  })
}
```

::: aside
En `server.R` escribes los procesos que gestionan el contenido.
:::

## El resultado

![](img/shiny0.png)

::: aside
Sin interacción y fea en cantidad. Sí, ahora lo arreglamos.
:::

## App 1

![](img/shiny1.png)

## App 1

**Ejercicio.** Sustituye el primer gráfico (_Categoría_) por uno de plotly (como el tercero).

**Ejercicio.** Sustituye el tercer gráfico (_Fraudes por Estado_) por los mismos datos en una tabla.


## App 2

![](img/shiny2.png)

## App 2

**Ejercicio.** Cambia el nombre de fichero que se exporta, de forma que
incluya los nombres (siglas) de estados.

## App 3

![](img/shiny3.png)

leonardohansa.com


# Cómo puedes seguir aprendiendo

## Es un ecosistema muy bien documentado

- [Tutorial de Posit desde cero.](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html) Sin duda, empieza por aquí.
- _Mastering Shiny,_ un [libro online](https://mastering-shiny.org/) muy recomendable para cuando sepas que quieres meter shiny en tu día a día.
- Y el paso definitivo, cómo [alojar en un servidor](https://posit.co/products/open-source/shinyserver/) tu app para que otros accedan


## Combina con otras librerías

- Interacción con la [API de OpenAI](https://irudnyts.github.io/openai/) 
- Extensiones [ggplot2](https://exts.ggplot2.tidyverse.org/gallery/)
- [Leaflet](https://rstudio.github.io/leaflet/) para R

## Tu nuevo mejor amigo

Aprende a usar la función `browser()`

## ¿Prefieres Python?

```{python}
#| label: shiny-python
#| echo: true
#| eval: false

from shiny.express import input, render, ui

ui.input_selectize(
    "var", "Select variable",
    choices=["bill_length_mm", "body_mass_g"]
)

@render.plot
def hist():
    from matplotlib import pyplot as plt
    from palmerpenguins import load_penguins

    df = load_penguins()
    df[input.var()].hist(grid=False)
    plt.xlabel(input.var())
    plt.ylabel("count")
```

::: aside
https://shiny.posit.co/py/
:::


## Referentes

- [Veerle Van Leemput](https://www.youtube.com/@HypebrightBV)
- [Albert Rapp](https://albert-rapp.de/)
- [Matt Dancho](https://www.business-science.io/)



# leonardohansa.com {.unnumbered .unlisted}

